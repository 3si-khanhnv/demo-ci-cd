name: CI - main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - ready_for_review

env:
  IMAGE_NAME: shared-components
  IBMCLOUD_REGION: eu-de
  REGISTRY_HOSTNAME: de.icr.io
  NAMESPACE: ${{secrets.ICR_NAMESPACE}}
  IBMCLOUD_API_KEY: ${{secrets.IBMCLOUD_API_KEY}}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      NODE_OPTIONS: --max_old_space_size=4096

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
          token: ${{secrets.GIT_TOKEN}}

      - name: Set submodule branch
        run: git config -f .gitmodules submodule.src/assets/i18n.branch develop
        if: ${{ github.event_name == 'push' }}

      - name: Run update submodule
        run: npm run submodule-update
        if: ${{ github.event_name == 'push' }}

      - name: Run git status
        id: status
        run: |
          echo "status=$(git status -s | wc -c)" >> $GITHUB_OUTPUT
        if: ${{ github.event_name == 'push' }}

      - name: Add adn commit files
        run: |
          git add .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Update submodules at $(date "+DATE: %Y-%m-%d TIME: %H:%M:%S")"
        if: ${{ steps.status.outputs.status != 0 }}
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{secrets.GIT_TOKEN}}
          branch: develop
        if: ${{ steps.status.outputs.status != 0 && github.event_name == 'push' }}

      - name: Setup NodeJs
        uses: actions/setup-node@v1
        with:
          node-version: "18.12.0"

      - name: Install Dependencies
        run: |
          npm ci

      - name: Run test
        run: |
          npm run test:ci

  build:
    needs: ["test"]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      advise: ${{ steps.va.outputs.result }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
          token: ${{secrets.GIT_TOKEN}}

      - name: Run update submodule
        run: npm run submodule-update
        if: ${{ github.event_name == 'push' }}

      - name: Setup NodeJs
        uses: actions/setup-node@v1
        with:
          node-version: "18.12.0"

      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud --version
          ibmcloud config --check-version=false
          ibmcloud plugin install -f container-registry
          ibmcloud plugin install -f container-service

      - name: Authenticate with IBM Cloud CLI
        run: |
          ibmcloud login -r ${IBMCLOUD_REGION} -g g-enterprise --apikey ${IBMCLOUD_API_KEY}
          ibmcloud cr region-set "${IBMCLOUD_REGION}"
          ibmcloud cr login

      - id: build
        name: Build and Push docker image
        run: |
          tag=$(npx -c 'echo "$npm_package_version"')
          image=${REGISTRY_HOSTNAME}/${NAMESPACE}/${IMAGE_NAME}:${tag}-dev-${{github.run_number}}
          docker build -t ${image} .
          docker push ${image}
          echo "image=${image}" >> $GITHUB_OUTPUT

  # Notification
  notification:
    if: always()
    needs: [test, build]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Notify slack success
        if: (needs.test.result == 'success') && (needs.build.result == 'success')
        uses: 8398a7/action-slack@v3
        with:
          author_name: ""
          status: success
          fields: job,repo,author,took
          text: "(develop) all jobs are succeed"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required

      # Runs a single command using the runners shell
      - name: Notify slack test error
        if: (needs.test.result != 'success')
        uses: 8398a7/action-slack@v3
        with:
          author_name: ""
          status: failure
          fields: job,repo,author,took
          text: "(develop) test job is ${{needs.test.result}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required

      # Runs a single command using the runners shell
      - name: Notify slack build error
        if: (needs.test.result == 'success') && (needs.build.result != 'success')
        uses: 8398a7/action-slack@v3
        with:
          author_name: ""
          status: failure
          fields: job,repo,author,took
          text: "(develop) build job is ${{needs.build.result}} : ${{needs.build.outputs.advise}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
