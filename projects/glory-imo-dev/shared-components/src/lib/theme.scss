@use "@angular/material" as mat;
@import "@angular/material/theming";
/*
* Design Style GuideLine
*/
// -- Font -----------------------------------------------------------------------
$glory-font: (
  main: '"Roboto", sans-serif',
);

// -- Color Format ----------------------------------------------------------------------
@mixin disabled {
  opacity: 0.5;
}

@mixin background {
  background-color: map-get($glory-main-natural, 100);
}

@mixin link {
  color: map-get($glory-secondary-blue, 400);
}

// -- Color ----------------------------------------------------------------------
/*
* text: 900
* icon, header: 800
* background: 100
*/
$glory-main-natural: (
  1000: #000000,
  900: #101624,
  800: #19243b,
  700: #3b475f,
  600: #5c667d,
  500: #7b8394,
  400: #b4b9c7,
  300: #d1d5e0,
  200: #e7eaf2,
  100: #f3f4f9,
  50: #f8f8f8,
  000: #ffffff,
  filter: (
    1000: invert(0%) sepia(100%) saturate(7464%) hue-rotate(185deg) brightness(94%) contrast(100%),
  ),
);
/*
* Secondary
* Red
* This Color express information of Error or Issued status
* and usecase is warning to destroyed workflow and block
*
* base: 500
*/
$glory-secondary-red: (
  700: #98210a,
  600: #b82609,
  500: #dc2400,
  400: #e74e30,
  300: #ea7f6a,
  200: #f1a596,
  100: #fdcdc4,
  000: #ffe3dd,
);
/*
* Secondary
* Yellow and Orange
* This Color express warning or issuing, preventing progress status
*
* base: 500
*/
$glory-secondary-yellow: (
  700: #e0ae00,
  600: #f0c001,
  500: #ffd800,
  400: #fee23e,
  300: #fce868,
  200: #fced8e,
  100: #fff6de,
);
$glory-secondary-orange: (
  700: #c67000,
  600: #e48100,
  500: #ff9000,
  400: #ffa329,
  300: #ffb85b,
  200: #ffcd8a,
  100: #ffe0b7,
);
/*
* Secondary
* Green
* This Color express Safety and Normal status, Successful
*
* base: 500
*/
$glory-secondary-green: (
  700: #046a47,
  600: #06865b,
  500: #00a16a,
  400: #22bb86,
  300: #4ecfa3,
  200: #8fe7c9,
  100: #bbf1df,
);
/*
* Secondary
* Blue
* This Color express Authentication, Connected, Progress state (indication, induction)
*
* base: 500
*/
$glory-secondary-blue: map_merge(
  mat.$blue-palette,
  (
    900: #072f63,
    800: #083876,
    700: #094188,
    600: #0050b4,
    500: #006ad7,
    400: #228ae6,
    300: #57a6ec,
    200: #8ec1f6,
    100: #c4e0fd,
  )
);

$glory-setting-colors: (
  snackbar: #3c424e,
  separator: #e5e5e5,
  table-header: #3b475f,
  table-border: #bbbfcc,
  active-tab: #3b4458,
  dropdown-focus: #ebf4fe,
  assets-status-hover: #eaebed,
);

$glory-primary: mat.define-palette(mat.$gray-palette);
$glory-accent: mat.define-palette($glory-secondary-blue, 600);
$glory-warn: mat.define-palette(mat.$deep-orange-palette);

$glory-theme: mat.define-light-theme(
  (
    color: (
      primary: $glory-primary,
      accent: $glory-accent,
      warn: $glory-warn,
    ),
    density: 0,
  )
);

$glory-background-color: map-get($glory-main-natural, 100);
// @debug map-get($glory-theme, background);

$background: map-get($glory-theme, background);
// @debug $background;
$background: map-merge(
  $background,
  (
    background: $glory-background-color,
  )
);
// @debug $background;

$glory-theme: map-merge(
  $glory-theme,
  (
    background: $background,
  )
);

// @debug map-get($glory-theme, background);
$glory-typography: mat.define-typography-config(
  $font-family: map-get($glory-font, main),
);

$glory-marker-color: (
  good: #22bb86,
  error: #e74e30,
  missing: #7b8394,
  good-missing: #5da3c2,
  good-hover: #00a16a,
  error-hover: #dc2400,
  missing-hover: #5c667d,
  good-missing-hover: #5590aa,
  good-active: #22bb86,
  error-active: #e74e30,
  missing-active: #7b8394,
  good-missing-active: #5da3c2,
  good-active-hover: #00a16a,
  error-active-hover: #dc2400,
  missing-active-hover: #5c667d,
  good-missing-active-hover: #5590aa,
  ci-connector: #515db6,
  ci-connector-hover: #4a549e,
  ci-connector-active: #515db6,
  ci-connector-active-hover: #4a549e,
  warning: #ffd800,
  warning-hover: #f2cd00,
  warning-active: #ffd800,
  warning-active-hover: #f2cd00,
);

// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy($glory-typography);`
// $glory-theme: mat.define-light-theme($glory-primary, $glory-accent, $glory-warn);

@include mat.core();
@include mat.all-component-themes($glory-theme);
@include mat.all-component-typographies($glory-typography);

body.mat-app-background {
  background-color: $glory-background-color;
}

// @include mat.all-legacy-component-typographies($glory-typography);
// @include mat.legacy-core();
// @include mat.all-legacy-component-themes($glory-theme);
